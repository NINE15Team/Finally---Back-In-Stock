generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Session {
  id          String    @id
  shop        String
  state       String
  isOnline    Boolean   @default(false)
  scope       String?
  expires     DateTime?
  accessToken String
  userId      String?
}

model ShopifyStoreInfo {
  id                 Int                 @id @default(autoincrement())
  storeId            String              @map("store_id")
  storeName          String              @map("store_name")
  shopifyURL         String              @unique @map("shopify_url")
  createdAt          DateTime            @default(now()) @map("created_at")
  updatedAt          DateTime            @default(now()) @updatedAt @map("updated_at")
  isInitilized       Boolean             @default(false) @map("is_initilized")
  isActive           Boolean             @default(true) @map("is_active")
  EmailConfiguartion EmailConfiguartion?
  productInfo        ProductInfo[]

  @@map("store_info")
}

model ProductInfo {
  id                   Int                    @id @default(autoincrement())
  storeId              Int                    @map("store_id")
  productId            String                 @map("product_id")
  productTitle         String                 @default("Default Product") @map("product_title")
  variantId            String                 @map("variant_id")
  variantTitle         String                 @default("Default Variant") @map("variant_title")
  status               Boolean                @default(false)
  isActive             Boolean                @default(true)
  productHandle        String                 @map("product_handle")
  imageURL             String                 @default("Default Variant") @map("image_url")
  price                Float                  @default(0) @map("price")
  customerSubscription CustomerSubscription[]
  store                ShopifyStoreInfo       @relation(fields: [storeId], references: [id], onDelete: Cascade)
  inStock              Boolean                @default(false)
  createdAt            DateTime               @default(now()) @map("created_at")
  updatedAt            DateTime               @default(now()) @updatedAt @map("updated_at")

  @@unique([productId, variantId])
  @@map("product_info")
}

model CustomerSubscription {
  id            Int         @id @default(autoincrement())
  productInfoId Int         @map("product_info_id")
  customerEmail String      @default("Default Email") @map("customer_email")
  status        Boolean     @default(false) @map("status")
  isNotified    Boolean     @default(false) @map("is_notified")
  isSubscribed  Boolean     @default(true) @map("is_subscribed")
  isActive      Boolean     @default(true)
  productInfo   ProductInfo @relation(fields: [productInfoId], references: [id], onDelete: Cascade)
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @default(now()) @updatedAt @map("updated_at")

  @@unique([customerEmail, productInfoId])
  @@map("customer_subscription")
}

model EmailConfiguartion {
  id              Int              @id @default(autoincrement())
  senderEmail     String           @default("") @map("sender_email")
  storeId         Int              @unique @map("store_id")
  isEmailVerified String           @default("NO") @map("email_verified")
  headerContent   String           @default("") @map("header_content")
  bodyContent     String           @default("") @map("body_content")
  footerContent   String           @default("") @map("footer_content")
  senderId        Int              @default(0) @map("sender_id")
  buttonContent   String           @default("") @map("button_content")
  title           String           @default("") @map("email_title")
  store           ShopifyStoreInfo @relation(fields: [storeId], references: [id], onDelete: Cascade)
  createdAt       DateTime         @default(now()) @map("created_at")
  updatedAt       DateTime         @default(now()) @updatedAt @map("updated_at")

  @@map("email_configuartion")
}
